gross[,5] <- NULL
gross
head(gross)
gross[,5] <- NULL
gross[,5] <- NULL
head(gross)
gross
str(gross)
data <- match(educational, gross, by.x=educational[,"CountryCode"], by.y=gross[,"X"])
data <- match(educational, gross, by.x="CountryCode", by.y="X")
data <- merge(educational, gross, by.x="CountryCode", by.y="X")
str(data)
head(data)
head(educational[,c("CountryCode", "Income.Group")])
head(data[,c("CountryCode", "Income.Group")])
head(data[,c("CountryCode", "Income.Group", "X.4")])
help(merge)
x <- subset(gross, gross$X.4 %in% educational$CountryCode)
head(x)
x <- gross[,gross[,"X.4"] %in% educational[,"CountryCod"]]
x <- gross[,gross[,"X.4"] %in% educational[,"CountryCode"]]
head(x)
x <- gross[gross[,"X.4"] %in% educational[,"CountryCode"],]
x <- gross[gross[,"X"] %in% educational[,"CountryCode"],]
head(x)
tail(x)
x <- gross[educational[,"CountryCode"] %in% gross[,"X"],]
head(x)
tail(x)
x <- gross[gross[,"X"] %in% educational[,"CountryCode"],]
head(x)
x <- gross[educational[,"CountryCode"] %in% gross[,"X"],]
bool <- x[,"X"] == ""
tail(bool)
bool <- x[,"X"] != ""
x[bool,]
trial <-12,432,212
trial <-"12,432,212"
doubl <- as.double(trial)
doubl
help(as.double)
length(x[1:190,])
n.rows(x[1:190,])
n.rows(x[1:190,1])
length(x[1:190,1])
help(sub)
help(sub)
sub(",", "", x[,"X.4"], fixed=TRUE)
sub(",", "", x[,"X.4"], fixed=TRUE)
sub(",", "", x[,"X.4"], fixed=TRUE)
x[,"X.4"] <- sub(",", "", x[,"X.4"], fixed=TRUE)
x[,"X.4"] <- sub(",", "", x[,"X.4"], fixed=TRUE)
x[,"X.4"] <- sub(",", "", x[,"X.4"], fixed=TRUE)
head(x)
tail(x)
x[,"X.4"] <- as.numeric(x[,"X.4"])
haed(x)
head(x)
str(x)
tail(x)
data <- merge(educational, gross, by.x="CountryCode", by.y="X")
data[,"X.4"] <- sub(",", "", data[,"X.4"], fixed=TRUE)
data[,"X.4"] <- sub(",", "", data[,"X.4"], fixed=TRUE)
data[,"X.4"] <- sub(",", "", data[,"X.4"], fixed=TRUE)
tail(data)
data[,"X.4"] <- as.numeric(data[,"X.4"])
mean(data[ data[,"Income.Group"] == "High income: OECD" , "X.4"])
data[,"X.1"] <- as.numeric(data[,"X.1"])
mean(data[ data[,"Income.Group"] == "High income: OECD" , "X.1"])
mean(data[ data[,"Income.Group"] == "High income: nonOECD" , "X.1"])
mean(data[ data[,"Income.Group"] == "High income: nonOECD" , "X.1"])
mean(data[ which(data[,"Income.Group"] == "High income: nonOECD") , "X.1"])
data[,"Income.Group"]
mean(data[ data[,"Income.Group"] == "High income: nonOECD" & !is.na(data[,"X.1"]) , "X.1"])
highest <- data[  !is.na(data[,"X.1"]) & data[,"X.1"] < 39  , c("CountryCode", "X.1", "X.4", "Income.Group")  ]
highest
arrange(highest, by="X.1")
install.packages("dplyr")
library(dplyr)
help (arrange)
arrange(highest, "X.1")
arrange(highest, highest[,"X.1"])
highest <- arrange(highest, highest[,"X.1"])
highest
goup_by(highest, Income.Group)
group_by(highest, Income.Group)
highest
grouped <- group_by(highest, Income.Group)
grouped
summerize(grouped)
summarize(grouped)
help(summarise)
help(summarize)
summarize(grouped, a=n())
help(paste)
help(read)
help(read.table)
list.files()
list.files("data/UCI HAR Dataset/")
list.files("data/UCI HAR Dataset/test/")
read.table("data/UCI HAR Dataset/activity_labels.txt")
help(paste)
dim(read.table("data/UCI HAR Dataset/features.txt"))
dim(read.table("data/UCI HAR Dataset/test/X_test.txt"))
dim(read.table("data/UCI HAR Dataset/test/Y_test.txt"))
dim(read.table("data/UCI HAR Dataset/test/y_test.txt"))
paste("a", "activity_labels.txt", sep="")
read.table(paste("data/UCI HAR Dataset/", "features.txt", sep=""))
x <- rbind(read.table("data/UCI HAR Dataset/test/X_test.txt"), read.table("data/UCI HAR Dataset/train/X_train.txt"))
head(x)
help(read.table)
y <- rbind(read.table("data/UCI HAR Dataset/test/y_test.txt"), read.table("data/UCI HAR Dataset/train/y_train.txt"))
subject <- rbind(read.table("data/UCI HAR Dataset/test/subject_test.txt"), read.table("data/UCI HAR Dataset/train/subject_train.txt"))
activity_labels <- read.table(paste("data/UCI HAR Dataset/", "activity_labels.txt", sep=""))
features <- read.table(paste("data/UCI HAR Dataset/", "features.txt", sep=""))
View(features)
features <- read.table(paste("data/UCI HAR Dataset/", "features.txt", sep=""), stringsAsFactors=FALSE)
activity_labels <- read.table(paste("data/UCI HAR Dataset/", "activity_labels.txt", sep=""), stringsAsFactors=FALSE)
help(data.frame)
help(read.table)
x <- rbind(read.table("data/UCI HAR Dataset/test/X_test.txt", col.names=features[,2]), read.table("data/UCI HAR Dataset/train/X_train.txt", col.names=features[,2]))
save
save()
activity_labels <- read.table(paste("~/R/data/UCI HAR Dataset/", "activity_labels.txt", sep=""), stringsAsFactors=FALSE)
features <- read.table(paste("~/R/data/UCI HAR Dataset/", "features.txt", sep=""), stringsAsFactors=FALSE)
x <- rbind(read.table(paste("~/R/data/UCI HAR Dataset/", "test/X_test.txt", sep=""),
col.names=features[,2]),
read.table(paste(url, "train/X_train.txt", sep=""),
col.names=features[,2]))
x <- rbind(read.table(paste("~/R/data/UCI HAR Dataset/", "test/X_test.txt", sep=""),
col.names=features[,2]),
read.table(paste("~/R/data/UCI HAR Dataset/", "train/X_train.txt", sep=""),
col.names=features[,2]))
y <- rbind(read.table(paste("~/R/data/UCI HAR Dataset/", "test/y_test.txt", sep="")),
read.table(paste("~/R/data/UCI HAR Dataset/", "train/y_train.txt", sep="")))
subject <- rbind(read.table(paste("~/R/data/UCI HAR Dataset/", "test/subject_test.txt", sep="")),
read.table(paste("~/R/data/UCI HAR Dataset/", "train/subject_train.txt", sep="")))
help(grepl)
grepl("mean", features)
grepl("mean", features[,2])
x[,grepl("mean()", features[,2]) | grepl("std()", features[,2])]
head(x[,grepl("mean()", features[,2]) | grepl("std()", features[,2])])
names(x[,grepl("mean()", features[,2]) | grepl("std()", features[,2])])
names(x[,grepl("mean\(\)", features[,2]) | grepl("std()", features[,2])])
grepl("mean()", "blablameanbla")
grepl("mean()", "blablameanbla", fixed=TRUE)
grepl("mean()", "blablamean()bla", fixed=TRUE)
names(x[,grepl("mean()", features[,2], fixed=TRUE) | grepl("std()", features[,2], fixed=TRUE)])
x <- x[,grepl("mean()", features[,2], fixed=TRUE) | grepl("std()", features[,2], fixed=TRUE)]
library(dplyr)
??merge
??dplyr
package(dplyr)
help(join)
left_join(y, activity_labels)
y
head(y)
head(left_join(y, activity_labels))
source('~/.active-rstudio-document')
y <- left_join(y, activity_labels)
head(cbind(x, y[,2]))
help(xbind)
help(cbind)
head(cbind(x, activity=y[,2]))
View(x)
y <- rbind(read.table(paste("~/R/data/UCI HAR Dataset/", "test/y_test.txt", sep="")),
read.table(paste("~/R/data/UCI HAR Dataset/", "train/y_train.txt", sep="")))
x <- cbind(x, y)
x[,67] <- NULL
x <- cbind(x, y=y)
x <- left_join(x, activity=activity_labels)
x <- left_join(x, activity_labels)
x <- left_join(x, xcx=activity_labels)
help(rename)
help(left_join)
x[,"V1"] <- NULL
rename(x, V2 = activity)
rename(x, activity = V2)
x <- rename(x, activity = V2)
x <- cbind(x, subject=subject[,1])
head(x[,c(1, "activity","subject")], 100)
head(x[,c( "activity","subject")], 100)
head(x[,c( "activity","subject")], 100)
head(x)
head(x[,c("tBodyAcc.mean...X", "activity","subject")], 100)
help(summarise)
help(summarise_)
help(summarise_each)
data <- x
help(group_by)
group_by(data, activity, subject)
data
data <- group_by(data, activity, subject)
data
head(data)
R.version.string
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dyplyr)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
do select(cran, -time)
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version ==
| "3.1.1", country == "US")
filter(cran, r_version =="3.1.1", country == "US")
?Comparison
filter(cran, r_version <="3.0.2", country == "IN")
filter(cran, country
| == "US" | country == "IN")
filter(cran, country== "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu", !is.na(r_version))
filter(cran, size > 100500, r_os == "linux-gnu", !is.na(cran[,"r_version"]))
filter(cran, !is.na(cran[,"r_version"]))
info()
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 20^19)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 20^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size * 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
help(group_by)
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679)
top_counts <-filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
filter(pack_sum, unique > 465)
top_unique filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit
submit()
submi
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
help(separate)
separate(data=res, col=sex_class, into=("sex", "class")
separate(data=res, col=sex_class, into=("sex", "class"))
separate(data=res, col=sex_class, into=("sex", "class"))
separate(data=res, col=sex_class, into=c("sex", "class"))
submit()
students3
submit()
help(spread)
submit()
submit
submit()
submit()
submit()
submit()
submit()
d
x <- students3 %>% gather(class, grade, class1:class5, na.rm = TRUE)
x
spread(x, test, name)
spread(x, name, test)
spread(x, test, name)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
stocksm <- stocks %>% gather(stock, price, -time)
stocksm
stocksm %>% spread(stock, price)
x
spread(stock, grade)
spread(x, stock, grade)
spread(x, test, grade)
submit()
extract_numeric("class5")
submit
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status="passed")
failed <- mutate(failed, status="failed")
bind_rows(passed, failed)
sat
?select
submit()
submit()
submit()
?separate
submit()
submit()
submit()
source('~/R/GettingAndCleaningData/run_analysis.R')
data <- run_analysis("~/R/data/UCI HAR Dataset/")
x <- data
x <- group_by(subject, activity)
x <- group_by(x, subject, activity)
x
x <- select(x, tBodyAcc.mean...X, activity, subject)
x
y <- mutate(x, mean = mean(tBodyAcc.mean...X))
head(y, 100)
View(y)
?mutate
y <- mutate_each(x, funs(mean))
View(y)
y <- mutate_each(data, funs(mean))
x <- group_by(data, subject, activity)
y <- mutate_each(x, funs(mean))
View(y)
?unique
y <- unique(y, incomparables = -(subject, activity))
?cols
?col
col(y)
col.names
colnames
colnames(y)
y <- unique(y, incomparables = colnames(select(y,-(activity,subject))))
y <- unique(y, incomparables = colnames(select(y,-(activity:subject))))
View(y)
select(y,-(activity:subject))
colnames(select(y,-(activity:subject)))
y <- mutate_each(x, funs(mean))
y <- unique(y[,c("activity", "subject")])
y
?unique
y <- unique(y)
y <- mutate_each(x, funs(mean))
y <- unique(y)
y <- mutate_each(x, funs(mean))
y <- unique(y)
source('~/R/GettingAndCleaningData/run_analysis.R')
data <- run_analysis("~/R/data/UCI HAR Dataset/")
source('~/R/GettingAndCleaningData/run_analysis.R')
data <- run_analysis("~/R/data/UCI HAR Dataset/")
View(data)
swirl
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRU)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dtl
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, now())
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
?now
nyc <- now(tzone="America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours += 17, minutes += 34)
depart <- update(depart, hours + 17, minutes + 34)
depart <- depart + hours(17) + minutes(34)
depart <- update(depart, hours = 17, minutes = 34)
depart
depart <- depart + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
depart
arrive <- depart + hours(15) + minutes(50)
arrive <- depart + hours(14) + minutes(50)
arrive <- depart + hours(16) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
arrive <- depart + minutes(50) + hours(15)
arrive = depart + minutes(50) + hours(15)
arrive <- depart + minutes(50) + hours(15)
arrive <- depart + hours(15) + minutes(50)
info()
skip()
arrive <- depart + hours(15) + minutes(50)
info()
skip()
depart
rm(arrive)
arrive <- depart + hours(15) + minutes(50)
depart
rm(arrive)
rm(depart)
swirl()
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone="Asia/Hong_Kong")
arrive <- with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
help(new_interval)
how_long <- new_interval(last_time, arrive)
how_long
as.period(how_long)
stopwatch()
source('~/R/GettingAndCleaningData/run_analysis.R')
data <- run_analysis("~/R/data/UCI HAR Dataset/")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
BodyWeight
help(package=lattice)
install.packages("ggplot2")
data <- read.csv("activity.csv", header=TRUE, stringsAsFactors=FALSE)
completeData <- data[!is.na(data[,"steps"]),]
library(lubridate)
completeData$date <- ymd(completeData$date)
library(dplyr)
stepsSumPerDay <- completeData %>% group_by(date) %>% summarise(steps = sum(steps))
x <- stepsSumPerDay
library(ggplot2)
ggplot(x, aes(x = date)) + geom_histogram(aes(width = steps))
ggplot(x, aes(x = date)) + geom_histogram(aes(weight = steps))
ggplot(x, aes(x = date)) + geom_histogram(aes(weight = steps/2))
library(knitr)
setwd("./RepData_PeerAssessment1/")
knit2html("PA1_template.Rmd")
browseURL("PA1_template.html")
help(geom_histogram)
qplot(date, data=x, weight=steps, geom="histogram")
qplot(date, data=x, weight=steps/2, geom="histogram")
qplot(date, data=x, weight=steps/2, geom="histogram", binwidth=1)
